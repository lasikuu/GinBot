// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v5.29.2
// source: proto/user_account.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserClearance int32

const (
	UserClearance_UNKNOWN       UserClearance = 0
	UserClearance_REGISTERED    UserClearance = 1
	UserClearance_MEMBER        UserClearance = 10
	UserClearance_MODERATOR     UserClearance = 20
	UserClearance_ADMINISTRATOR UserClearance = 50
	UserClearance_OWNER         UserClearance = 100
)

// Enum value maps for UserClearance.
var (
	UserClearance_name = map[int32]string{
		0:   "UNKNOWN",
		1:   "REGISTERED",
		10:  "MEMBER",
		20:  "MODERATOR",
		50:  "ADMINISTRATOR",
		100: "OWNER",
	}
	UserClearance_value = map[string]int32{
		"UNKNOWN":       0,
		"REGISTERED":    1,
		"MEMBER":        10,
		"MODERATOR":     20,
		"ADMINISTRATOR": 50,
		"OWNER":         100,
	}
)

func (x UserClearance) Enum() *UserClearance {
	p := new(UserClearance)
	*p = x
	return p
}

func (x UserClearance) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserClearance) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_user_account_proto_enumTypes[0].Descriptor()
}

func (UserClearance) Type() protoreflect.EnumType {
	return &file_proto_user_account_proto_enumTypes[0]
}

func (x UserClearance) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserClearance.Descriptor instead.
func (UserClearance) EnumDescriptor() ([]byte, []int) {
	return file_proto_user_account_proto_rawDescGZIP(), []int{0}
}

// Message representing a User
type UserAccount struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UUID of the User
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Username of the User
	Username *string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	// Clearance level of the User
	Clearance *UserClearance `protobuf:"varint,3,opt,name=clearance,enum=ginbot.user_account.UserClearance" json:"clearance,omitempty"`
	// Avatar URL of the User
	Avatar *string `protobuf:"bytes,4,opt,name=avatar" json:"avatar,omitempty"`
	// Locale of the User
	Locale *string `protobuf:"bytes,5,opt,name=locale" json:"locale,omitempty"`
	// Timezone of the User
	Timezone *string `protobuf:"bytes,6,opt,name=timezone" json:"timezone,omitempty"`
	// User ID of the creator
	Birthday *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=birthday" json:"birthday,omitempty"`
	// Birthday last congratulated at
	LastCongratulatedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=last_congratulated_at,json=lastCongratulatedAt" json:"last_congratulated_at,omitempty"`
	// Created at
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	// Updated at
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserAccount) Reset() {
	*x = UserAccount{}
	mi := &file_proto_user_account_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccount) ProtoMessage() {}

func (x *UserAccount) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_account_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccount.ProtoReflect.Descriptor instead.
func (*UserAccount) Descriptor() ([]byte, []int) {
	return file_proto_user_account_proto_rawDescGZIP(), []int{0}
}

func (x *UserAccount) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *UserAccount) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *UserAccount) GetClearance() UserClearance {
	if x != nil && x.Clearance != nil {
		return *x.Clearance
	}
	return UserClearance_UNKNOWN
}

func (x *UserAccount) GetAvatar() string {
	if x != nil && x.Avatar != nil {
		return *x.Avatar
	}
	return ""
}

func (x *UserAccount) GetLocale() string {
	if x != nil && x.Locale != nil {
		return *x.Locale
	}
	return ""
}

func (x *UserAccount) GetTimezone() string {
	if x != nil && x.Timezone != nil {
		return *x.Timezone
	}
	return ""
}

func (x *UserAccount) GetBirthday() *timestamppb.Timestamp {
	if x != nil {
		return x.Birthday
	}
	return nil
}

func (x *UserAccount) GetLastCongratulatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastCongratulatedAt
	}
	return nil
}

func (x *UserAccount) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UserAccount) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type GetUserReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UUID of the User
	Id            *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserReq) Reset() {
	*x = GetUserReq{}
	mi := &file_proto_user_account_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserReq) ProtoMessage() {}

func (x *GetUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_account_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserReq.ProtoReflect.Descriptor instead.
func (*GetUserReq) Descriptor() ([]byte, []int) {
	return file_proto_user_account_proto_rawDescGZIP(), []int{1}
}

func (x *GetUserReq) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

type GetUserResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *UserAccount           `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserResp) Reset() {
	*x = GetUserResp{}
	mi := &file_proto_user_account_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserResp) ProtoMessage() {}

func (x *GetUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_account_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserResp.ProtoReflect.Descriptor instead.
func (*GetUserResp) Descriptor() ([]byte, []int) {
	return file_proto_user_account_proto_rawDescGZIP(), []int{2}
}

func (x *GetUserResp) GetUser() *UserAccount {
	if x != nil {
		return x.User
	}
	return nil
}

type RegisterReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Platform where the user is registering
	Platform *Platform `protobuf:"varint,1,opt,name=platform,enum=ginbot.common.Platform" json:"platform,omitempty"`
	// User ID of the user registering (platform agnostic)
	PlatformUserId *string `protobuf:"bytes,2,opt,name=platform_user_id,json=platformUserId" json:"platform_user_id,omitempty"`
	// Metadata of the platform (such as other identifiers)
	PlatformMetadata *structpb.Struct `protobuf:"bytes,3,opt,name=platform_metadata,json=platformMetadata" json:"platform_metadata,omitempty"`
	// Username of the user
	Username *string `protobuf:"bytes,4,opt,name=username" json:"username,omitempty"`
	// Locale of the user
	Locale        *string `protobuf:"bytes,5,opt,name=locale" json:"locale,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterReq) Reset() {
	*x = RegisterReq{}
	mi := &file_proto_user_account_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterReq) ProtoMessage() {}

func (x *RegisterReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_account_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterReq.ProtoReflect.Descriptor instead.
func (*RegisterReq) Descriptor() ([]byte, []int) {
	return file_proto_user_account_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterReq) GetPlatform() Platform {
	if x != nil && x.Platform != nil {
		return *x.Platform
	}
	return Platform_Discord
}

func (x *RegisterReq) GetPlatformUserId() string {
	if x != nil && x.PlatformUserId != nil {
		return *x.PlatformUserId
	}
	return ""
}

func (x *RegisterReq) GetPlatformMetadata() *structpb.Struct {
	if x != nil {
		return x.PlatformMetadata
	}
	return nil
}

func (x *RegisterReq) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *RegisterReq) GetLocale() string {
	if x != nil && x.Locale != nil {
		return *x.Locale
	}
	return ""
}

type RegisterResp struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// User UUID of the registered user
	UserId        *string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterResp) Reset() {
	*x = RegisterResp{}
	mi := &file_proto_user_account_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResp) ProtoMessage() {}

func (x *RegisterResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_account_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResp.ProtoReflect.Descriptor instead.
func (*RegisterResp) Descriptor() ([]byte, []int) {
	return file_proto_user_account_proto_rawDescGZIP(), []int{4}
}

func (x *RegisterResp) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

type GetCongratulableBirthdaysResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Users         []*UserAccount         `protobuf:"bytes,1,rep,name=users" json:"users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCongratulableBirthdaysResp) Reset() {
	*x = GetCongratulableBirthdaysResp{}
	mi := &file_proto_user_account_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCongratulableBirthdaysResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCongratulableBirthdaysResp) ProtoMessage() {}

func (x *GetCongratulableBirthdaysResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_account_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCongratulableBirthdaysResp.ProtoReflect.Descriptor instead.
func (*GetCongratulableBirthdaysResp) Descriptor() ([]byte, []int) {
	return file_proto_user_account_proto_rawDescGZIP(), []int{5}
}

func (x *GetCongratulableBirthdaysResp) GetUsers() []*UserAccount {
	if x != nil {
		return x.Users
	}
	return nil
}

var File_proto_user_account_proto protoreflect.FileDescriptor

var file_proto_user_account_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x67, 0x69, 0x6e, 0x62,
	0x6f, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xc5, 0x03, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x63,
	0x6c, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22,
	0x2e, 0x67, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x09, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x62, 0x69, 0x72,
	0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61,
	0x79, 0x12, 0x4e, 0x0a, 0x15, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x67, 0x72, 0x61,
	0x74, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x13, 0x6c, 0x61,
	0x73, 0x74, 0x43, 0x6f, 0x6e, 0x67, 0x72, 0x61, 0x74, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x1c, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x43, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0xe6, 0x01, 0x0a, 0x0b, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x33, 0x0a, 0x08, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x67,
	0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12,
	0x28, 0x0a, 0x10, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x11, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x10, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x65, 0x22, 0x27, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x1d,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x67, 0x72, 0x61, 0x74, 0x75, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a,
	0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67,
	0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x2a, 0x65, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6c, 0x65,
	0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x45,
	0x44, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x0a, 0x12,
	0x0d, 0x0a, 0x09, 0x4d, 0x4f, 0x44, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x10, 0x14, 0x12, 0x11,
	0x0a, 0x0d, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x49, 0x53, 0x54, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x10,
	0x32, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x57, 0x4e, 0x45, 0x52, 0x10, 0x64, 0x32, 0x95, 0x02, 0x0a,
	0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x07,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x67, 0x69, 0x6e, 0x62, 0x6f, 0x74,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x67, 0x69, 0x6e, 0x62, 0x6f,
	0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x08, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x20, 0x2e, 0x67, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x67, 0x69, 0x6e, 0x62, 0x6f,
	0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x67, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x67, 0x72, 0x61, 0x74, 0x75, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42,
	0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x32, 0x2e, 0x67, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x67, 0x72, 0x61,
	0x74, 0x75, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x43, 0x72, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x74, 0x4b, 0x6f, 0x68, 0x61, 0x6e,
	0x61, 0x2f, 0x47, 0x69, 0x6e, 0x42, 0x6f, 0x74, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x65, 0x6e,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x08, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x70, 0xe8, 0x07,
}

var (
	file_proto_user_account_proto_rawDescOnce sync.Once
	file_proto_user_account_proto_rawDescData = file_proto_user_account_proto_rawDesc
)

func file_proto_user_account_proto_rawDescGZIP() []byte {
	file_proto_user_account_proto_rawDescOnce.Do(func() {
		file_proto_user_account_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_user_account_proto_rawDescData)
	})
	return file_proto_user_account_proto_rawDescData
}

var file_proto_user_account_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_user_account_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_user_account_proto_goTypes = []any{
	(UserClearance)(0),                    // 0: ginbot.user_account.UserClearance
	(*UserAccount)(nil),                   // 1: ginbot.user_account.UserAccount
	(*GetUserReq)(nil),                    // 2: ginbot.user_account.GetUserReq
	(*GetUserResp)(nil),                   // 3: ginbot.user_account.GetUserResp
	(*RegisterReq)(nil),                   // 4: ginbot.user_account.RegisterReq
	(*RegisterResp)(nil),                  // 5: ginbot.user_account.RegisterResp
	(*GetCongratulableBirthdaysResp)(nil), // 6: ginbot.user_account.GetCongratulableBirthdaysResp
	(*timestamppb.Timestamp)(nil),         // 7: google.protobuf.Timestamp
	(Platform)(0),                         // 8: ginbot.common.Platform
	(*structpb.Struct)(nil),               // 9: google.protobuf.Struct
	(*emptypb.Empty)(nil),                 // 10: google.protobuf.Empty
}
var file_proto_user_account_proto_depIdxs = []int32{
	0,  // 0: ginbot.user_account.UserAccount.clearance:type_name -> ginbot.user_account.UserClearance
	7,  // 1: ginbot.user_account.UserAccount.birthday:type_name -> google.protobuf.Timestamp
	7,  // 2: ginbot.user_account.UserAccount.last_congratulated_at:type_name -> google.protobuf.Timestamp
	7,  // 3: ginbot.user_account.UserAccount.created_at:type_name -> google.protobuf.Timestamp
	7,  // 4: ginbot.user_account.UserAccount.updated_at:type_name -> google.protobuf.Timestamp
	1,  // 5: ginbot.user_account.GetUserResp.user:type_name -> ginbot.user_account.UserAccount
	8,  // 6: ginbot.user_account.RegisterReq.platform:type_name -> ginbot.common.Platform
	9,  // 7: ginbot.user_account.RegisterReq.platform_metadata:type_name -> google.protobuf.Struct
	1,  // 8: ginbot.user_account.GetCongratulableBirthdaysResp.users:type_name -> ginbot.user_account.UserAccount
	2,  // 9: ginbot.user_account.UserService.GetUser:input_type -> ginbot.user_account.GetUserReq
	4,  // 10: ginbot.user_account.UserService.Register:input_type -> ginbot.user_account.RegisterReq
	10, // 11: ginbot.user_account.UserService.GetCongratulableBirthdays:input_type -> google.protobuf.Empty
	3,  // 12: ginbot.user_account.UserService.GetUser:output_type -> ginbot.user_account.GetUserResp
	5,  // 13: ginbot.user_account.UserService.Register:output_type -> ginbot.user_account.RegisterResp
	6,  // 14: ginbot.user_account.UserService.GetCongratulableBirthdays:output_type -> ginbot.user_account.GetCongratulableBirthdaysResp
	12, // [12:15] is the sub-list for method output_type
	9,  // [9:12] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_proto_user_account_proto_init() }
func file_proto_user_account_proto_init() {
	if File_proto_user_account_proto != nil {
		return
	}
	file_proto_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_user_account_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_user_account_proto_goTypes,
		DependencyIndexes: file_proto_user_account_proto_depIdxs,
		EnumInfos:         file_proto_user_account_proto_enumTypes,
		MessageInfos:      file_proto_user_account_proto_msgTypes,
	}.Build()
	File_proto_user_account_proto = out.File
	file_proto_user_account_proto_rawDesc = nil
	file_proto_user_account_proto_goTypes = nil
	file_proto_user_account_proto_depIdxs = nil
}

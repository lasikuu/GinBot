// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v5.29.2
// source: proto/platform.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Platform struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Internal Platform ID
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// Platform enum
	PlatformEnum *PlatformEnum `protobuf:"varint,2,opt,name=platform_enum,json=platformEnum,enum=ginbot.common.PlatformEnum" json:"platform_enum,omitempty"`
	// Platform meta information such as Server ID etc.
	PlatformMeta *structpb.Struct `protobuf:"bytes,3,opt,name=platform_meta,json=platformMeta" json:"platform_meta,omitempty"`
	// Default channel for the platform (if applicable) for announcements etc.
	DefaultChannel *string                `protobuf:"bytes,4,opt,name=default_channel,json=defaultChannel" json:"default_channel,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	UpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Platform) Reset() {
	*x = Platform{}
	mi := &file_proto_platform_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Platform) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Platform) ProtoMessage() {}

func (x *Platform) ProtoReflect() protoreflect.Message {
	mi := &file_proto_platform_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Platform.ProtoReflect.Descriptor instead.
func (*Platform) Descriptor() ([]byte, []int) {
	return file_proto_platform_proto_rawDescGZIP(), []int{0}
}

func (x *Platform) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Platform) GetPlatformEnum() PlatformEnum {
	if x != nil && x.PlatformEnum != nil {
		return *x.PlatformEnum
	}
	return PlatformEnum_UNKNOWN
}

func (x *Platform) GetPlatformMeta() *structpb.Struct {
	if x != nil {
		return x.PlatformMeta
	}
	return nil
}

func (x *Platform) GetDefaultChannel() string {
	if x != nil && x.DefaultChannel != nil {
		return *x.DefaultChannel
	}
	return ""
}

func (x *Platform) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Platform) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type GetPlatformReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Internal Platform ID
	Id            *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlatformReq) Reset() {
	*x = GetPlatformReq{}
	mi := &file_proto_platform_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlatformReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlatformReq) ProtoMessage() {}

func (x *GetPlatformReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_platform_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlatformReq.ProtoReflect.Descriptor instead.
func (*GetPlatformReq) Descriptor() ([]byte, []int) {
	return file_proto_platform_proto_rawDescGZIP(), []int{1}
}

func (x *GetPlatformReq) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

type GetPlatformResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Platform      *Platform              `protobuf:"bytes,1,opt,name=platform" json:"platform,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlatformResp) Reset() {
	*x = GetPlatformResp{}
	mi := &file_proto_platform_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlatformResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlatformResp) ProtoMessage() {}

func (x *GetPlatformResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_platform_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlatformResp.ProtoReflect.Descriptor instead.
func (*GetPlatformResp) Descriptor() ([]byte, []int) {
	return file_proto_platform_proto_rawDescGZIP(), []int{2}
}

func (x *GetPlatformResp) GetPlatform() *Platform {
	if x != nil {
		return x.Platform
	}
	return nil
}

type ListPlatformsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Offset        *int64                 `protobuf:"varint,1,opt,name=offset" json:"offset,omitempty"`
	Limit         *int64                 `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPlatformsReq) Reset() {
	*x = ListPlatformsReq{}
	mi := &file_proto_platform_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPlatformsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlatformsReq) ProtoMessage() {}

func (x *ListPlatformsReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_platform_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlatformsReq.ProtoReflect.Descriptor instead.
func (*ListPlatformsReq) Descriptor() ([]byte, []int) {
	return file_proto_platform_proto_rawDescGZIP(), []int{3}
}

func (x *ListPlatformsReq) GetOffset() int64 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

func (x *ListPlatformsReq) GetLimit() int64 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

type ListPlatformsResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Platforms     []*Platform            `protobuf:"bytes,1,rep,name=platforms" json:"platforms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPlatformsResp) Reset() {
	*x = ListPlatformsResp{}
	mi := &file_proto_platform_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPlatformsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlatformsResp) ProtoMessage() {}

func (x *ListPlatformsResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_platform_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlatformsResp.ProtoReflect.Descriptor instead.
func (*ListPlatformsResp) Descriptor() ([]byte, []int) {
	return file_proto_platform_proto_rawDescGZIP(), []int{4}
}

func (x *ListPlatformsResp) GetPlatforms() []*Platform {
	if x != nil {
		return x.Platforms
	}
	return nil
}

type CreatePlatformReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Platform enum
	PlatformEnum *PlatformEnum `protobuf:"varint,1,opt,name=platform_enum,json=platformEnum,enum=ginbot.common.PlatformEnum" json:"platform_enum,omitempty"`
	// Platform meta information such as Server ID etc.
	PlatformMeta *structpb.Struct `protobuf:"bytes,2,opt,name=platform_meta,json=platformMeta" json:"platform_meta,omitempty"`
	// Default channel for the platform (if applicable) for announcements etc.
	DefaultChannel *string `protobuf:"bytes,3,opt,name=default_channel,json=defaultChannel" json:"default_channel,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreatePlatformReq) Reset() {
	*x = CreatePlatformReq{}
	mi := &file_proto_platform_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePlatformReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlatformReq) ProtoMessage() {}

func (x *CreatePlatformReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_platform_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlatformReq.ProtoReflect.Descriptor instead.
func (*CreatePlatformReq) Descriptor() ([]byte, []int) {
	return file_proto_platform_proto_rawDescGZIP(), []int{5}
}

func (x *CreatePlatformReq) GetPlatformEnum() PlatformEnum {
	if x != nil && x.PlatformEnum != nil {
		return *x.PlatformEnum
	}
	return PlatformEnum_UNKNOWN
}

func (x *CreatePlatformReq) GetPlatformMeta() *structpb.Struct {
	if x != nil {
		return x.PlatformMeta
	}
	return nil
}

func (x *CreatePlatformReq) GetDefaultChannel() string {
	if x != nil && x.DefaultChannel != nil {
		return *x.DefaultChannel
	}
	return ""
}

type CreatePlatformResp struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Internal Platform ID
	Id            *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePlatformResp) Reset() {
	*x = CreatePlatformResp{}
	mi := &file_proto_platform_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePlatformResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlatformResp) ProtoMessage() {}

func (x *CreatePlatformResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_platform_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlatformResp.ProtoReflect.Descriptor instead.
func (*CreatePlatformResp) Descriptor() ([]byte, []int) {
	return file_proto_platform_proto_rawDescGZIP(), []int{6}
}

func (x *CreatePlatformResp) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

type UpdatePlatformReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Internal Platform ID
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// Platform enum
	PlatformEnum *PlatformEnum `protobuf:"varint,2,opt,name=platform_enum,json=platformEnum,enum=ginbot.common.PlatformEnum" json:"platform_enum,omitempty"`
	// Platform meta information such as Server ID etc.
	PlatformMeta *structpb.Struct `protobuf:"bytes,3,opt,name=platform_meta,json=platformMeta" json:"platform_meta,omitempty"`
	// Default channel for the platform (if applicable) for announcements etc.
	DefaultChannel *string `protobuf:"bytes,4,opt,name=default_channel,json=defaultChannel" json:"default_channel,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdatePlatformReq) Reset() {
	*x = UpdatePlatformReq{}
	mi := &file_proto_platform_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePlatformReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlatformReq) ProtoMessage() {}

func (x *UpdatePlatformReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_platform_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlatformReq.ProtoReflect.Descriptor instead.
func (*UpdatePlatformReq) Descriptor() ([]byte, []int) {
	return file_proto_platform_proto_rawDescGZIP(), []int{7}
}

func (x *UpdatePlatformReq) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *UpdatePlatformReq) GetPlatformEnum() PlatformEnum {
	if x != nil && x.PlatformEnum != nil {
		return *x.PlatformEnum
	}
	return PlatformEnum_UNKNOWN
}

func (x *UpdatePlatformReq) GetPlatformMeta() *structpb.Struct {
	if x != nil {
		return x.PlatformMeta
	}
	return nil
}

func (x *UpdatePlatformReq) GetDefaultChannel() string {
	if x != nil && x.DefaultChannel != nil {
		return *x.DefaultChannel
	}
	return ""
}

type DeletePlatformReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Internal Platform ID
	Id            *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePlatformReq) Reset() {
	*x = DeletePlatformReq{}
	mi := &file_proto_platform_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePlatformReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePlatformReq) ProtoMessage() {}

func (x *DeletePlatformReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_platform_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePlatformReq.ProtoReflect.Descriptor instead.
func (*DeletePlatformReq) Descriptor() ([]byte, []int) {
	return file_proto_platform_proto_rawDescGZIP(), []int{8}
}

func (x *DeletePlatformReq) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

var File_proto_platform_proto protoreflect.FileDescriptor

var file_proto_platform_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x67, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb9, 0x02, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x40, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x67, 0x69,
	0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x3c, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x4d, 0x65, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x39, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x48, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x69, 0x6e,
	0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x22,
	0x40, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0x4c, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x69, 0x6e, 0x62,
	0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x22,
	0xbc, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x40, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x67,
	0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x3c, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x24,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x22, 0xcc, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x40, 0x0a, 0x0d, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1b, 0x2e, 0x67, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0c,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x3c, 0x0a, 0x0d,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0c, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x22, 0x23, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x32, 0xb2, 0x03, 0x0a, 0x0f, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1f, 0x2e, 0x67, 0x69,
	0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x67,
	0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x56,
	0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x12,
	0x21, 0x2e, 0x67, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x22, 0x2e, 0x67, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x59, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x22, 0x2e, 0x67, 0x69, 0x6e, 0x62, 0x6f,
	0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x67,
	0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x4c, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x12, 0x22, 0x2e, 0x67, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x4c, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x12, 0x22, 0x2e, 0x67, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x30, 0x5a,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x72, 0x65, 0x73,
	0x63, 0x65, 0x6e, 0x74, 0x4b, 0x6f, 0x68, 0x61, 0x6e, 0x61, 0x2f, 0x47, 0x69, 0x6e, 0x42, 0x6f,
	0x74, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x08, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x70, 0xe8, 0x07,
}

var (
	file_proto_platform_proto_rawDescOnce sync.Once
	file_proto_platform_proto_rawDescData = file_proto_platform_proto_rawDesc
)

func file_proto_platform_proto_rawDescGZIP() []byte {
	file_proto_platform_proto_rawDescOnce.Do(func() {
		file_proto_platform_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_platform_proto_rawDescData)
	})
	return file_proto_platform_proto_rawDescData
}

var file_proto_platform_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_platform_proto_goTypes = []any{
	(*Platform)(nil),              // 0: ginbot.platform.Platform
	(*GetPlatformReq)(nil),        // 1: ginbot.platform.GetPlatformReq
	(*GetPlatformResp)(nil),       // 2: ginbot.platform.GetPlatformResp
	(*ListPlatformsReq)(nil),      // 3: ginbot.platform.ListPlatformsReq
	(*ListPlatformsResp)(nil),     // 4: ginbot.platform.ListPlatformsResp
	(*CreatePlatformReq)(nil),     // 5: ginbot.platform.CreatePlatformReq
	(*CreatePlatformResp)(nil),    // 6: ginbot.platform.CreatePlatformResp
	(*UpdatePlatformReq)(nil),     // 7: ginbot.platform.UpdatePlatformReq
	(*DeletePlatformReq)(nil),     // 8: ginbot.platform.DeletePlatformReq
	(PlatformEnum)(0),             // 9: ginbot.common.PlatformEnum
	(*structpb.Struct)(nil),       // 10: google.protobuf.Struct
	(*timestamppb.Timestamp)(nil), // 11: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 12: google.protobuf.Empty
}
var file_proto_platform_proto_depIdxs = []int32{
	9,  // 0: ginbot.platform.Platform.platform_enum:type_name -> ginbot.common.PlatformEnum
	10, // 1: ginbot.platform.Platform.platform_meta:type_name -> google.protobuf.Struct
	11, // 2: ginbot.platform.Platform.created_at:type_name -> google.protobuf.Timestamp
	11, // 3: ginbot.platform.Platform.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 4: ginbot.platform.GetPlatformResp.platform:type_name -> ginbot.platform.Platform
	0,  // 5: ginbot.platform.ListPlatformsResp.platforms:type_name -> ginbot.platform.Platform
	9,  // 6: ginbot.platform.CreatePlatformReq.platform_enum:type_name -> ginbot.common.PlatformEnum
	10, // 7: ginbot.platform.CreatePlatformReq.platform_meta:type_name -> google.protobuf.Struct
	9,  // 8: ginbot.platform.UpdatePlatformReq.platform_enum:type_name -> ginbot.common.PlatformEnum
	10, // 9: ginbot.platform.UpdatePlatformReq.platform_meta:type_name -> google.protobuf.Struct
	1,  // 10: ginbot.platform.PlatformService.GetPlatform:input_type -> ginbot.platform.GetPlatformReq
	3,  // 11: ginbot.platform.PlatformService.ListPlatforms:input_type -> ginbot.platform.ListPlatformsReq
	5,  // 12: ginbot.platform.PlatformService.CreatePlatform:input_type -> ginbot.platform.CreatePlatformReq
	7,  // 13: ginbot.platform.PlatformService.UpdatePlatform:input_type -> ginbot.platform.UpdatePlatformReq
	8,  // 14: ginbot.platform.PlatformService.DeletePlatform:input_type -> ginbot.platform.DeletePlatformReq
	2,  // 15: ginbot.platform.PlatformService.GetPlatform:output_type -> ginbot.platform.GetPlatformResp
	4,  // 16: ginbot.platform.PlatformService.ListPlatforms:output_type -> ginbot.platform.ListPlatformsResp
	6,  // 17: ginbot.platform.PlatformService.CreatePlatform:output_type -> ginbot.platform.CreatePlatformResp
	12, // 18: ginbot.platform.PlatformService.UpdatePlatform:output_type -> google.protobuf.Empty
	12, // 19: ginbot.platform.PlatformService.DeletePlatform:output_type -> google.protobuf.Empty
	15, // [15:20] is the sub-list for method output_type
	10, // [10:15] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_proto_platform_proto_init() }
func file_proto_platform_proto_init() {
	if File_proto_platform_proto != nil {
		return
	}
	file_proto_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_platform_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_platform_proto_goTypes,
		DependencyIndexes: file_proto_platform_proto_depIdxs,
		MessageInfos:      file_proto_platform_proto_msgTypes,
	}.Build()
	File_proto_platform_proto = out.File
	file_proto_platform_proto_rawDesc = nil
	file_proto_platform_proto_goTypes = nil
	file_proto_platform_proto_depIdxs = nil
}

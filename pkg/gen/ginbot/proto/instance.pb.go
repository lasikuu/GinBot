// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v5.29.2
// source: ginbot/proto/instance.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Instance struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id             int64                  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	xxx_hidden_PlatformEnum   Platform               `protobuf:"varint,2,opt,name=platform_enum,json=platformEnum,enum=ginbot.proto.Platform" json:"platform_enum,omitempty"`
	xxx_hidden_InstanceMeta   *structpb.Struct       `protobuf:"bytes,3,opt,name=instance_meta,json=instanceMeta" json:"instance_meta,omitempty"`
	xxx_hidden_DefaultChannel *string                `protobuf:"bytes,4,opt,name=default_channel,json=defaultChannel" json:"default_channel,omitempty"`
	xxx_hidden_CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	xxx_hidden_UpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *Instance) Reset() {
	*x = Instance{}
	mi := &file_ginbot_proto_instance_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Instance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instance) ProtoMessage() {}

func (x *Instance) ProtoReflect() protoreflect.Message {
	mi := &file_ginbot_proto_instance_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Instance) GetId() int64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *Instance) GetPlatformEnum() Platform {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_PlatformEnum
		}
	}
	return Platform_PLATFORM_UNSPECIFIED
}

func (x *Instance) GetInstanceMeta() *structpb.Struct {
	if x != nil {
		return x.xxx_hidden_InstanceMeta
	}
	return nil
}

func (x *Instance) GetDefaultChannel() string {
	if x != nil {
		if x.xxx_hidden_DefaultChannel != nil {
			return *x.xxx_hidden_DefaultChannel
		}
		return ""
	}
	return ""
}

func (x *Instance) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_CreatedAt
	}
	return nil
}

func (x *Instance) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_UpdatedAt
	}
	return nil
}

func (x *Instance) SetId(v int64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *Instance) SetPlatformEnum(v Platform) {
	x.xxx_hidden_PlatformEnum = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *Instance) SetInstanceMeta(v *structpb.Struct) {
	x.xxx_hidden_InstanceMeta = v
}

func (x *Instance) SetDefaultChannel(v string) {
	x.xxx_hidden_DefaultChannel = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *Instance) SetCreatedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_CreatedAt = v
}

func (x *Instance) SetUpdatedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_UpdatedAt = v
}

func (x *Instance) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Instance) HasPlatformEnum() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Instance) HasInstanceMeta() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_InstanceMeta != nil
}

func (x *Instance) HasDefaultChannel() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Instance) HasCreatedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CreatedAt != nil
}

func (x *Instance) HasUpdatedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_UpdatedAt != nil
}

func (x *Instance) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

func (x *Instance) ClearPlatformEnum() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_PlatformEnum = Platform_PLATFORM_UNSPECIFIED
}

func (x *Instance) ClearInstanceMeta() {
	x.xxx_hidden_InstanceMeta = nil
}

func (x *Instance) ClearDefaultChannel() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_DefaultChannel = nil
}

func (x *Instance) ClearCreatedAt() {
	x.xxx_hidden_CreatedAt = nil
}

func (x *Instance) ClearUpdatedAt() {
	x.xxx_hidden_UpdatedAt = nil
}

type Instance_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Internal Instance ID
	Id *int64
	// Instance enum
	PlatformEnum *Platform
	// Instance meta information such as Server ID etc.
	InstanceMeta *structpb.Struct
	// Default channel for the instance (if applicable) for announcements etc.
	DefaultChannel *string
	CreatedAt      *timestamppb.Timestamp
	UpdatedAt      *timestamppb.Timestamp
}

func (b0 Instance_builder) Build() *Instance {
	m0 := &Instance{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_Id = *b.Id
	}
	if b.PlatformEnum != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_PlatformEnum = *b.PlatformEnum
	}
	x.xxx_hidden_InstanceMeta = b.InstanceMeta
	if b.DefaultChannel != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_DefaultChannel = b.DefaultChannel
	}
	x.xxx_hidden_CreatedAt = b.CreatedAt
	x.xxx_hidden_UpdatedAt = b.UpdatedAt
	return m0
}

type GetInstanceReq struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          int64                  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetInstanceReq) Reset() {
	*x = GetInstanceReq{}
	mi := &file_ginbot_proto_instance_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInstanceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstanceReq) ProtoMessage() {}

func (x *GetInstanceReq) ProtoReflect() protoreflect.Message {
	mi := &file_ginbot_proto_instance_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetInstanceReq) GetId() int64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *GetInstanceReq) SetId(v int64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *GetInstanceReq) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetInstanceReq) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

type GetInstanceReq_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Internal Instance ID
	Id *int64
}

func (b0 GetInstanceReq_builder) Build() *GetInstanceReq {
	m0 := &GetInstanceReq{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Id = *b.Id
	}
	return m0
}

type GetInstanceResp struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Instance *Instance              `protobuf:"bytes,1,opt,name=instance" json:"instance,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetInstanceResp) Reset() {
	*x = GetInstanceResp{}
	mi := &file_ginbot_proto_instance_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInstanceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstanceResp) ProtoMessage() {}

func (x *GetInstanceResp) ProtoReflect() protoreflect.Message {
	mi := &file_ginbot_proto_instance_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetInstanceResp) GetInstance() *Instance {
	if x != nil {
		return x.xxx_hidden_Instance
	}
	return nil
}

func (x *GetInstanceResp) SetInstance(v *Instance) {
	x.xxx_hidden_Instance = v
}

func (x *GetInstanceResp) HasInstance() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Instance != nil
}

func (x *GetInstanceResp) ClearInstance() {
	x.xxx_hidden_Instance = nil
}

type GetInstanceResp_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Instance *Instance
}

func (b0 GetInstanceResp_builder) Build() *GetInstanceResp {
	m0 := &GetInstanceResp{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Instance = b.Instance
	return m0
}

type ListInstancesReq struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Offset      int64                  `protobuf:"varint,1,opt,name=offset" json:"offset,omitempty"`
	xxx_hidden_Limit       int64                  `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ListInstancesReq) Reset() {
	*x = ListInstancesReq{}
	mi := &file_ginbot_proto_instance_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListInstancesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInstancesReq) ProtoMessage() {}

func (x *ListInstancesReq) ProtoReflect() protoreflect.Message {
	mi := &file_ginbot_proto_instance_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListInstancesReq) GetOffset() int64 {
	if x != nil {
		return x.xxx_hidden_Offset
	}
	return 0
}

func (x *ListInstancesReq) GetLimit() int64 {
	if x != nil {
		return x.xxx_hidden_Limit
	}
	return 0
}

func (x *ListInstancesReq) SetOffset(v int64) {
	x.xxx_hidden_Offset = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *ListInstancesReq) SetLimit(v int64) {
	x.xxx_hidden_Limit = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *ListInstancesReq) HasOffset() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ListInstancesReq) HasLimit() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ListInstancesReq) ClearOffset() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Offset = 0
}

func (x *ListInstancesReq) ClearLimit() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Limit = 0
}

type ListInstancesReq_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Offset *int64
	Limit  *int64
}

func (b0 ListInstancesReq_builder) Build() *ListInstancesReq {
	m0 := &ListInstancesReq{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Offset != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Offset = *b.Offset
	}
	if b.Limit != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Limit = *b.Limit
	}
	return m0
}

type ListInstancesResp struct {
	state                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Instances *[]*Instance           `protobuf:"bytes,1,rep,name=instances" json:"instances,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ListInstancesResp) Reset() {
	*x = ListInstancesResp{}
	mi := &file_ginbot_proto_instance_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListInstancesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInstancesResp) ProtoMessage() {}

func (x *ListInstancesResp) ProtoReflect() protoreflect.Message {
	mi := &file_ginbot_proto_instance_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListInstancesResp) GetInstances() []*Instance {
	if x != nil {
		if x.xxx_hidden_Instances != nil {
			return *x.xxx_hidden_Instances
		}
	}
	return nil
}

func (x *ListInstancesResp) SetInstances(v []*Instance) {
	x.xxx_hidden_Instances = &v
}

type ListInstancesResp_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Instances []*Instance
}

func (b0 ListInstancesResp_builder) Build() *ListInstancesResp {
	m0 := &ListInstancesResp{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Instances = &b.Instances
	return m0
}

type CreateInstanceReq struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_PlatformEnum   Platform               `protobuf:"varint,1,opt,name=platform_enum,json=platformEnum,enum=ginbot.proto.Platform" json:"platform_enum,omitempty"`
	xxx_hidden_InstanceMeta   *structpb.Struct       `protobuf:"bytes,2,opt,name=instance_meta,json=instanceMeta" json:"instance_meta,omitempty"`
	xxx_hidden_DefaultChannel *string                `protobuf:"bytes,3,opt,name=default_channel,json=defaultChannel" json:"default_channel,omitempty"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *CreateInstanceReq) Reset() {
	*x = CreateInstanceReq{}
	mi := &file_ginbot_proto_instance_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateInstanceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInstanceReq) ProtoMessage() {}

func (x *CreateInstanceReq) ProtoReflect() protoreflect.Message {
	mi := &file_ginbot_proto_instance_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateInstanceReq) GetPlatformEnum() Platform {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_PlatformEnum
		}
	}
	return Platform_PLATFORM_UNSPECIFIED
}

func (x *CreateInstanceReq) GetInstanceMeta() *structpb.Struct {
	if x != nil {
		return x.xxx_hidden_InstanceMeta
	}
	return nil
}

func (x *CreateInstanceReq) GetDefaultChannel() string {
	if x != nil {
		if x.xxx_hidden_DefaultChannel != nil {
			return *x.xxx_hidden_DefaultChannel
		}
		return ""
	}
	return ""
}

func (x *CreateInstanceReq) SetPlatformEnum(v Platform) {
	x.xxx_hidden_PlatformEnum = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *CreateInstanceReq) SetInstanceMeta(v *structpb.Struct) {
	x.xxx_hidden_InstanceMeta = v
}

func (x *CreateInstanceReq) SetDefaultChannel(v string) {
	x.xxx_hidden_DefaultChannel = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *CreateInstanceReq) HasPlatformEnum() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CreateInstanceReq) HasInstanceMeta() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_InstanceMeta != nil
}

func (x *CreateInstanceReq) HasDefaultChannel() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CreateInstanceReq) ClearPlatformEnum() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_PlatformEnum = Platform_PLATFORM_UNSPECIFIED
}

func (x *CreateInstanceReq) ClearInstanceMeta() {
	x.xxx_hidden_InstanceMeta = nil
}

func (x *CreateInstanceReq) ClearDefaultChannel() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_DefaultChannel = nil
}

type CreateInstanceReq_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Instance enum
	PlatformEnum *Platform
	// Instance meta information such as Server ID etc.
	InstanceMeta *structpb.Struct
	// Default channel for the instance (if applicable) for announcements etc.
	DefaultChannel *string
}

func (b0 CreateInstanceReq_builder) Build() *CreateInstanceReq {
	m0 := &CreateInstanceReq{}
	b, x := &b0, m0
	_, _ = b, x
	if b.PlatformEnum != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_PlatformEnum = *b.PlatformEnum
	}
	x.xxx_hidden_InstanceMeta = b.InstanceMeta
	if b.DefaultChannel != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_DefaultChannel = b.DefaultChannel
	}
	return m0
}

type CreateInstanceResp struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          int64                  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CreateInstanceResp) Reset() {
	*x = CreateInstanceResp{}
	mi := &file_ginbot_proto_instance_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateInstanceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInstanceResp) ProtoMessage() {}

func (x *CreateInstanceResp) ProtoReflect() protoreflect.Message {
	mi := &file_ginbot_proto_instance_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateInstanceResp) GetId() int64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *CreateInstanceResp) SetId(v int64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *CreateInstanceResp) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CreateInstanceResp) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

type CreateInstanceResp_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Internal Instance ID
	Id *int64
}

func (b0 CreateInstanceResp_builder) Build() *CreateInstanceResp {
	m0 := &CreateInstanceResp{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Id = *b.Id
	}
	return m0
}

type UpdateInstanceReq struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id             int64                  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	xxx_hidden_PlatformEnum   Platform               `protobuf:"varint,2,opt,name=platform_enum,json=platformEnum,enum=ginbot.proto.Platform" json:"platform_enum,omitempty"`
	xxx_hidden_InstanceMeta   *structpb.Struct       `protobuf:"bytes,3,opt,name=instance_meta,json=instanceMeta" json:"instance_meta,omitempty"`
	xxx_hidden_DefaultChannel *string                `protobuf:"bytes,4,opt,name=default_channel,json=defaultChannel" json:"default_channel,omitempty"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *UpdateInstanceReq) Reset() {
	*x = UpdateInstanceReq{}
	mi := &file_ginbot_proto_instance_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateInstanceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInstanceReq) ProtoMessage() {}

func (x *UpdateInstanceReq) ProtoReflect() protoreflect.Message {
	mi := &file_ginbot_proto_instance_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateInstanceReq) GetId() int64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *UpdateInstanceReq) GetPlatformEnum() Platform {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_PlatformEnum
		}
	}
	return Platform_PLATFORM_UNSPECIFIED
}

func (x *UpdateInstanceReq) GetInstanceMeta() *structpb.Struct {
	if x != nil {
		return x.xxx_hidden_InstanceMeta
	}
	return nil
}

func (x *UpdateInstanceReq) GetDefaultChannel() string {
	if x != nil {
		if x.xxx_hidden_DefaultChannel != nil {
			return *x.xxx_hidden_DefaultChannel
		}
		return ""
	}
	return ""
}

func (x *UpdateInstanceReq) SetId(v int64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *UpdateInstanceReq) SetPlatformEnum(v Platform) {
	x.xxx_hidden_PlatformEnum = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *UpdateInstanceReq) SetInstanceMeta(v *structpb.Struct) {
	x.xxx_hidden_InstanceMeta = v
}

func (x *UpdateInstanceReq) SetDefaultChannel(v string) {
	x.xxx_hidden_DefaultChannel = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *UpdateInstanceReq) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdateInstanceReq) HasPlatformEnum() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UpdateInstanceReq) HasInstanceMeta() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_InstanceMeta != nil
}

func (x *UpdateInstanceReq) HasDefaultChannel() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *UpdateInstanceReq) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

func (x *UpdateInstanceReq) ClearPlatformEnum() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_PlatformEnum = Platform_PLATFORM_UNSPECIFIED
}

func (x *UpdateInstanceReq) ClearInstanceMeta() {
	x.xxx_hidden_InstanceMeta = nil
}

func (x *UpdateInstanceReq) ClearDefaultChannel() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_DefaultChannel = nil
}

type UpdateInstanceReq_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Internal Instance ID
	Id *int64
	// Instance enum
	PlatformEnum *Platform
	// Instance meta information such as Server ID etc.
	InstanceMeta *structpb.Struct
	// Default channel for the instance (if applicable) for announcements etc.
	DefaultChannel *string
}

func (b0 UpdateInstanceReq_builder) Build() *UpdateInstanceReq {
	m0 := &UpdateInstanceReq{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Id = *b.Id
	}
	if b.PlatformEnum != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_PlatformEnum = *b.PlatformEnum
	}
	x.xxx_hidden_InstanceMeta = b.InstanceMeta
	if b.DefaultChannel != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_DefaultChannel = b.DefaultChannel
	}
	return m0
}

type DeleteInstanceReq struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          int64                  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DeleteInstanceReq) Reset() {
	*x = DeleteInstanceReq{}
	mi := &file_ginbot_proto_instance_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteInstanceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInstanceReq) ProtoMessage() {}

func (x *DeleteInstanceReq) ProtoReflect() protoreflect.Message {
	mi := &file_ginbot_proto_instance_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteInstanceReq) GetId() int64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *DeleteInstanceReq) SetId(v int64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *DeleteInstanceReq) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeleteInstanceReq) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

type DeleteInstanceReq_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Internal Instance ID
	Id *int64
}

func (b0 DeleteInstanceReq_builder) Build() *DeleteInstanceReq {
	m0 := &DeleteInstanceReq{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Id = *b.Id
	}
	return m0
}

var File_ginbot_proto_instance_proto protoreflect.FileDescriptor

var file_ginbot_proto_instance_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x67, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x67,
	0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x69, 0x6e,
	0x62, 0x6f, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x6f, 0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb4, 0x02, 0x0a, 0x08, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x3b, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x67, 0x69,
	0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x45, 0x6e, 0x75,
	0x6d, 0x12, 0x3c, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6d, 0x65,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12,
	0x27, 0x0a, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x20,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x45, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x40, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x49, 0x0a, 0x11, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34,
	0x0a, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x67, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x22, 0xb7, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x3b, 0x0a, 0x0d, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x16, 0x2e, 0x67, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x3c, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x24,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x22, 0xc7, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3b, 0x0a, 0x0d, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x16, 0x2e, 0x67, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x3c, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x23,
	0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x32, 0x9a, 0x03, 0x0a, 0x0f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x2e, 0x67, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x67, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x67, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x67, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x69, 0x6e, 0x62, 0x6f, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x67, 0x69, 0x6e, 0x62, 0x6f,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x49, 0x0a, 0x0e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x2e, 0x67,
	0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x49, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x69, 0x6e, 0x62, 0x6f, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x42, 0x38, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c,
	0x61, 0x73, 0x69, 0x6b, 0x75, 0x75, 0x2f, 0x47, 0x69, 0x6e, 0x42, 0x6f, 0x74, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x92, 0x03, 0x05, 0xd2, 0x3e, 0x02, 0x10, 0x03, 0x62, 0x08, 0x65, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x70, 0xe8, 0x07,
}

var file_ginbot_proto_instance_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_ginbot_proto_instance_proto_goTypes = []any{
	(*Instance)(nil),              // 0: ginbot.proto.Instance
	(*GetInstanceReq)(nil),        // 1: ginbot.proto.GetInstanceReq
	(*GetInstanceResp)(nil),       // 2: ginbot.proto.GetInstanceResp
	(*ListInstancesReq)(nil),      // 3: ginbot.proto.ListInstancesReq
	(*ListInstancesResp)(nil),     // 4: ginbot.proto.ListInstancesResp
	(*CreateInstanceReq)(nil),     // 5: ginbot.proto.CreateInstanceReq
	(*CreateInstanceResp)(nil),    // 6: ginbot.proto.CreateInstanceResp
	(*UpdateInstanceReq)(nil),     // 7: ginbot.proto.UpdateInstanceReq
	(*DeleteInstanceReq)(nil),     // 8: ginbot.proto.DeleteInstanceReq
	(Platform)(0),                 // 9: ginbot.proto.Platform
	(*structpb.Struct)(nil),       // 10: google.protobuf.Struct
	(*timestamppb.Timestamp)(nil), // 11: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 12: google.protobuf.Empty
}
var file_ginbot_proto_instance_proto_depIdxs = []int32{
	9,  // 0: ginbot.proto.Instance.platform_enum:type_name -> ginbot.proto.Platform
	10, // 1: ginbot.proto.Instance.instance_meta:type_name -> google.protobuf.Struct
	11, // 2: ginbot.proto.Instance.created_at:type_name -> google.protobuf.Timestamp
	11, // 3: ginbot.proto.Instance.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 4: ginbot.proto.GetInstanceResp.instance:type_name -> ginbot.proto.Instance
	0,  // 5: ginbot.proto.ListInstancesResp.instances:type_name -> ginbot.proto.Instance
	9,  // 6: ginbot.proto.CreateInstanceReq.platform_enum:type_name -> ginbot.proto.Platform
	10, // 7: ginbot.proto.CreateInstanceReq.instance_meta:type_name -> google.protobuf.Struct
	9,  // 8: ginbot.proto.UpdateInstanceReq.platform_enum:type_name -> ginbot.proto.Platform
	10, // 9: ginbot.proto.UpdateInstanceReq.instance_meta:type_name -> google.protobuf.Struct
	1,  // 10: ginbot.proto.InstanceService.GetInstance:input_type -> ginbot.proto.GetInstanceReq
	3,  // 11: ginbot.proto.InstanceService.ListInstances:input_type -> ginbot.proto.ListInstancesReq
	5,  // 12: ginbot.proto.InstanceService.CreateInstance:input_type -> ginbot.proto.CreateInstanceReq
	7,  // 13: ginbot.proto.InstanceService.UpdateInstance:input_type -> ginbot.proto.UpdateInstanceReq
	8,  // 14: ginbot.proto.InstanceService.DeleteInstance:input_type -> ginbot.proto.DeleteInstanceReq
	2,  // 15: ginbot.proto.InstanceService.GetInstance:output_type -> ginbot.proto.GetInstanceResp
	4,  // 16: ginbot.proto.InstanceService.ListInstances:output_type -> ginbot.proto.ListInstancesResp
	6,  // 17: ginbot.proto.InstanceService.CreateInstance:output_type -> ginbot.proto.CreateInstanceResp
	12, // 18: ginbot.proto.InstanceService.UpdateInstance:output_type -> google.protobuf.Empty
	12, // 19: ginbot.proto.InstanceService.DeleteInstance:output_type -> google.protobuf.Empty
	15, // [15:20] is the sub-list for method output_type
	10, // [10:15] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_ginbot_proto_instance_proto_init() }
func file_ginbot_proto_instance_proto_init() {
	if File_ginbot_proto_instance_proto != nil {
		return
	}
	file_ginbot_proto_platform_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ginbot_proto_instance_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ginbot_proto_instance_proto_goTypes,
		DependencyIndexes: file_ginbot_proto_instance_proto_depIdxs,
		MessageInfos:      file_ginbot_proto_instance_proto_msgTypes,
	}.Build()
	File_ginbot_proto_instance_proto = out.File
	file_ginbot_proto_instance_proto_rawDesc = nil
	file_ginbot_proto_instance_proto_goTypes = nil
	file_ginbot_proto_instance_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v5.29.2
// source: ginbot/proto/reminder.proto

package proto

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReminderStatus int32

const (
	ReminderStatus_REMINDER_STATUS_UNSPECIFIED ReminderStatus = 0
	ReminderStatus_REMINDER_STATUS_PENDING     ReminderStatus = 1
	ReminderStatus_REMINDER_STATUS_SENT        ReminderStatus = 2
	ReminderStatus_REMINDER_STATUS_DELIVERED   ReminderStatus = 3
	ReminderStatus_REMINDER_STATUS_FAILED      ReminderStatus = 4
)

// Enum value maps for ReminderStatus.
var (
	ReminderStatus_name = map[int32]string{
		0: "REMINDER_STATUS_UNSPECIFIED",
		1: "REMINDER_STATUS_PENDING",
		2: "REMINDER_STATUS_SENT",
		3: "REMINDER_STATUS_DELIVERED",
		4: "REMINDER_STATUS_FAILED",
	}
	ReminderStatus_value = map[string]int32{
		"REMINDER_STATUS_UNSPECIFIED": 0,
		"REMINDER_STATUS_PENDING":     1,
		"REMINDER_STATUS_SENT":        2,
		"REMINDER_STATUS_DELIVERED":   3,
		"REMINDER_STATUS_FAILED":      4,
	}
)

func (x ReminderStatus) Enum() *ReminderStatus {
	p := new(ReminderStatus)
	*p = x
	return p
}

func (x ReminderStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReminderStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_ginbot_proto_reminder_proto_enumTypes[0].Descriptor()
}

func (ReminderStatus) Type() protoreflect.EnumType {
	return &file_ginbot_proto_reminder_proto_enumTypes[0]
}

func (x ReminderStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Message representing a Reminder
type Reminder struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	xxx_hidden_Datetime    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=datetime" json:"datetime,omitempty"`
	xxx_hidden_Timezone    *string                `protobuf:"bytes,3,opt,name=timezone" json:"timezone,omitempty"`
	xxx_hidden_RepeatCron  *string                `protobuf:"bytes,4,opt,name=repeat_cron,json=repeatCron" json:"repeat_cron,omitempty"`
	xxx_hidden_Destination *ReminderDestination   `protobuf:"bytes,5,opt,name=destination" json:"destination,omitempty"`
	xxx_hidden_Status      ReminderStatus         `protobuf:"varint,6,opt,name=status,enum=ginbot.proto.ReminderStatus" json:"status,omitempty"`
	xxx_hidden_UserId      int64                  `protobuf:"varint,7,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	xxx_hidden_Message     *string                `protobuf:"bytes,8,opt,name=message" json:"message,omitempty"`
	xxx_hidden_ParentId    int64                  `protobuf:"varint,9,opt,name=parent_id,json=parentId" json:"parent_id,omitempty"`
	xxx_hidden_CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	xxx_hidden_UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Reminder) Reset() {
	*x = Reminder{}
	mi := &file_ginbot_proto_reminder_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Reminder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reminder) ProtoMessage() {}

func (x *Reminder) ProtoReflect() protoreflect.Message {
	mi := &file_ginbot_proto_reminder_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Reminder) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *Reminder) GetDatetime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_Datetime
	}
	return nil
}

func (x *Reminder) GetTimezone() string {
	if x != nil {
		if x.xxx_hidden_Timezone != nil {
			return *x.xxx_hidden_Timezone
		}
		return ""
	}
	return ""
}

func (x *Reminder) GetRepeatCron() string {
	if x != nil {
		if x.xxx_hidden_RepeatCron != nil {
			return *x.xxx_hidden_RepeatCron
		}
		return ""
	}
	return ""
}

func (x *Reminder) GetDestination() *ReminderDestination {
	if x != nil {
		return x.xxx_hidden_Destination
	}
	return nil
}

func (x *Reminder) GetStatus() ReminderStatus {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 5) {
			return x.xxx_hidden_Status
		}
	}
	return ReminderStatus_REMINDER_STATUS_UNSPECIFIED
}

func (x *Reminder) GetUserId() int64 {
	if x != nil {
		return x.xxx_hidden_UserId
	}
	return 0
}

func (x *Reminder) GetMessage() string {
	if x != nil {
		if x.xxx_hidden_Message != nil {
			return *x.xxx_hidden_Message
		}
		return ""
	}
	return ""
}

func (x *Reminder) GetParentId() int64 {
	if x != nil {
		return x.xxx_hidden_ParentId
	}
	return 0
}

func (x *Reminder) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_CreatedAt
	}
	return nil
}

func (x *Reminder) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_UpdatedAt
	}
	return nil
}

func (x *Reminder) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 11)
}

func (x *Reminder) SetDatetime(v *timestamppb.Timestamp) {
	x.xxx_hidden_Datetime = v
}

func (x *Reminder) SetTimezone(v string) {
	x.xxx_hidden_Timezone = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 11)
}

func (x *Reminder) SetRepeatCron(v string) {
	x.xxx_hidden_RepeatCron = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 11)
}

func (x *Reminder) SetDestination(v *ReminderDestination) {
	x.xxx_hidden_Destination = v
}

func (x *Reminder) SetStatus(v ReminderStatus) {
	x.xxx_hidden_Status = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 11)
}

func (x *Reminder) SetUserId(v int64) {
	x.xxx_hidden_UserId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 11)
}

func (x *Reminder) SetMessage(v string) {
	x.xxx_hidden_Message = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 11)
}

func (x *Reminder) SetParentId(v int64) {
	x.xxx_hidden_ParentId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 11)
}

func (x *Reminder) SetCreatedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_CreatedAt = v
}

func (x *Reminder) SetUpdatedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_UpdatedAt = v
}

func (x *Reminder) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Reminder) HasDatetime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Datetime != nil
}

func (x *Reminder) HasTimezone() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Reminder) HasRepeatCron() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Reminder) HasDestination() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Destination != nil
}

func (x *Reminder) HasStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *Reminder) HasUserId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *Reminder) HasMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *Reminder) HasParentId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *Reminder) HasCreatedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CreatedAt != nil
}

func (x *Reminder) HasUpdatedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_UpdatedAt != nil
}

func (x *Reminder) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *Reminder) ClearDatetime() {
	x.xxx_hidden_Datetime = nil
}

func (x *Reminder) ClearTimezone() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Timezone = nil
}

func (x *Reminder) ClearRepeatCron() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_RepeatCron = nil
}

func (x *Reminder) ClearDestination() {
	x.xxx_hidden_Destination = nil
}

func (x *Reminder) ClearStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Status = ReminderStatus_REMINDER_STATUS_UNSPECIFIED
}

func (x *Reminder) ClearUserId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_UserId = 0
}

func (x *Reminder) ClearMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_Message = nil
}

func (x *Reminder) ClearParentId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_ParentId = 0
}

func (x *Reminder) ClearCreatedAt() {
	x.xxx_hidden_CreatedAt = nil
}

func (x *Reminder) ClearUpdatedAt() {
	x.xxx_hidden_UpdatedAt = nil
}

type Reminder_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Reminder UUIDv7
	Id *string
	// Date and time of the Reminder (UTC+0)
	Datetime *timestamppb.Timestamp
	// Timezone of the Reminder
	Timezone *string
	// Repeat in cron format
	RepeatCron *string
	// Destinations to send the reminder to
	Destination *ReminderDestination
	// Status of the Reminder
	Status *ReminderStatus
	// User ID of the creator
	UserId *int64
	// Reminder message
	Message *string
	// Parent reminder ID
	ParentId *int64
	// Created at
	CreatedAt *timestamppb.Timestamp
	// Updated at
	UpdatedAt *timestamppb.Timestamp
}

func (b0 Reminder_builder) Build() *Reminder {
	m0 := &Reminder{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 11)
		x.xxx_hidden_Id = b.Id
	}
	x.xxx_hidden_Datetime = b.Datetime
	if b.Timezone != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 11)
		x.xxx_hidden_Timezone = b.Timezone
	}
	if b.RepeatCron != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 11)
		x.xxx_hidden_RepeatCron = b.RepeatCron
	}
	x.xxx_hidden_Destination = b.Destination
	if b.Status != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 11)
		x.xxx_hidden_Status = *b.Status
	}
	if b.UserId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 11)
		x.xxx_hidden_UserId = *b.UserId
	}
	if b.Message != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 11)
		x.xxx_hidden_Message = b.Message
	}
	if b.ParentId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 11)
		x.xxx_hidden_ParentId = *b.ParentId
	}
	x.xxx_hidden_CreatedAt = b.CreatedAt
	x.xxx_hidden_UpdatedAt = b.UpdatedAt
	return m0
}

// Destination to send the reminder to
type ReminderDestination struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_PlatformEnum    Platform               `protobuf:"varint,1,opt,name=platform_enum,json=platformEnum,enum=ginbot.proto.Platform" json:"platform_enum,omitempty"`
	xxx_hidden_InstanceMeta    *structpb.Struct       `protobuf:"bytes,2,opt,name=instance_meta,json=instanceMeta" json:"instance_meta,omitempty"`
	xxx_hidden_DestinationMeta *structpb.Struct       `protobuf:"bytes,3,opt,name=destination_meta,json=destinationMeta" json:"destination_meta,omitempty"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *ReminderDestination) Reset() {
	*x = ReminderDestination{}
	mi := &file_ginbot_proto_reminder_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReminderDestination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReminderDestination) ProtoMessage() {}

func (x *ReminderDestination) ProtoReflect() protoreflect.Message {
	mi := &file_ginbot_proto_reminder_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ReminderDestination) GetPlatformEnum() Platform {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_PlatformEnum
		}
	}
	return Platform_PLATFORM_UNSPECIFIED
}

func (x *ReminderDestination) GetInstanceMeta() *structpb.Struct {
	if x != nil {
		return x.xxx_hidden_InstanceMeta
	}
	return nil
}

func (x *ReminderDestination) GetDestinationMeta() *structpb.Struct {
	if x != nil {
		return x.xxx_hidden_DestinationMeta
	}
	return nil
}

func (x *ReminderDestination) SetPlatformEnum(v Platform) {
	x.xxx_hidden_PlatformEnum = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *ReminderDestination) SetInstanceMeta(v *structpb.Struct) {
	x.xxx_hidden_InstanceMeta = v
}

func (x *ReminderDestination) SetDestinationMeta(v *structpb.Struct) {
	x.xxx_hidden_DestinationMeta = v
}

func (x *ReminderDestination) HasPlatformEnum() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ReminderDestination) HasInstanceMeta() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_InstanceMeta != nil
}

func (x *ReminderDestination) HasDestinationMeta() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DestinationMeta != nil
}

func (x *ReminderDestination) ClearPlatformEnum() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_PlatformEnum = Platform_PLATFORM_UNSPECIFIED
}

func (x *ReminderDestination) ClearInstanceMeta() {
	x.xxx_hidden_InstanceMeta = nil
}

func (x *ReminderDestination) ClearDestinationMeta() {
	x.xxx_hidden_DestinationMeta = nil
}

type ReminderDestination_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Platform to send the reminder to
	PlatformEnum *Platform
	// Platform meta information such as Server ID etc.
	InstanceMeta *structpb.Struct
	// Meta information such as Channel ID etc.
	DestinationMeta *structpb.Struct
}

func (b0 ReminderDestination_builder) Build() *ReminderDestination {
	m0 := &ReminderDestination{}
	b, x := &b0, m0
	_, _ = b, x
	if b.PlatformEnum != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_PlatformEnum = *b.PlatformEnum
	}
	x.xxx_hidden_InstanceMeta = b.InstanceMeta
	x.xxx_hidden_DestinationMeta = b.DestinationMeta
	return m0
}

type GetReminderReq struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetReminderReq) Reset() {
	*x = GetReminderReq{}
	mi := &file_ginbot_proto_reminder_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReminderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReminderReq) ProtoMessage() {}

func (x *GetReminderReq) ProtoReflect() protoreflect.Message {
	mi := &file_ginbot_proto_reminder_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetReminderReq) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *GetReminderReq) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *GetReminderReq) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetReminderReq) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

type GetReminderReq_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Reminder UUIDv7
	Id *string
}

func (b0 GetReminderReq_builder) Build() *GetReminderReq {
	m0 := &GetReminderReq{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Id = b.Id
	}
	return m0
}

type GetReminderResp struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Reminder *Reminder              `protobuf:"bytes,1,opt,name=reminder" json:"reminder,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetReminderResp) Reset() {
	*x = GetReminderResp{}
	mi := &file_ginbot_proto_reminder_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReminderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReminderResp) ProtoMessage() {}

func (x *GetReminderResp) ProtoReflect() protoreflect.Message {
	mi := &file_ginbot_proto_reminder_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetReminderResp) GetReminder() *Reminder {
	if x != nil {
		return x.xxx_hidden_Reminder
	}
	return nil
}

func (x *GetReminderResp) SetReminder(v *Reminder) {
	x.xxx_hidden_Reminder = v
}

func (x *GetReminderResp) HasReminder() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Reminder != nil
}

func (x *GetReminderResp) ClearReminder() {
	x.xxx_hidden_Reminder = nil
}

type GetReminderResp_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Reminder *Reminder
}

func (b0 GetReminderResp_builder) Build() *GetReminderResp {
	m0 := &GetReminderResp{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Reminder = b.Reminder
	return m0
}

type ListRemindersReq struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Limit       int64                  `protobuf:"varint,1,opt,name=limit" json:"limit,omitempty"`
	xxx_hidden_Offset      int64                  `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	xxx_hidden_Message     *string                `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	xxx_hidden_UserId      int64                  `protobuf:"varint,4,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	xxx_hidden_PeriodStart *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=period_start,json=periodStart" json:"period_start,omitempty"`
	xxx_hidden_PeriodEnd   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=period_end,json=periodEnd" json:"period_end,omitempty"`
	xxx_hidden_Status      ReminderStatus         `protobuf:"varint,7,opt,name=status,enum=ginbot.proto.ReminderStatus" json:"status,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ListRemindersReq) Reset() {
	*x = ListRemindersReq{}
	mi := &file_ginbot_proto_reminder_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRemindersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRemindersReq) ProtoMessage() {}

func (x *ListRemindersReq) ProtoReflect() protoreflect.Message {
	mi := &file_ginbot_proto_reminder_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListRemindersReq) GetLimit() int64 {
	if x != nil {
		return x.xxx_hidden_Limit
	}
	return 0
}

func (x *ListRemindersReq) GetOffset() int64 {
	if x != nil {
		return x.xxx_hidden_Offset
	}
	return 0
}

func (x *ListRemindersReq) GetMessage() string {
	if x != nil {
		if x.xxx_hidden_Message != nil {
			return *x.xxx_hidden_Message
		}
		return ""
	}
	return ""
}

func (x *ListRemindersReq) GetUserId() int64 {
	if x != nil {
		return x.xxx_hidden_UserId
	}
	return 0
}

func (x *ListRemindersReq) GetPeriodStart() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_PeriodStart
	}
	return nil
}

func (x *ListRemindersReq) GetPeriodEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_PeriodEnd
	}
	return nil
}

func (x *ListRemindersReq) GetStatus() ReminderStatus {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 6) {
			return x.xxx_hidden_Status
		}
	}
	return ReminderStatus_REMINDER_STATUS_UNSPECIFIED
}

func (x *ListRemindersReq) SetLimit(v int64) {
	x.xxx_hidden_Limit = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *ListRemindersReq) SetOffset(v int64) {
	x.xxx_hidden_Offset = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *ListRemindersReq) SetMessage(v string) {
	x.xxx_hidden_Message = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *ListRemindersReq) SetUserId(v int64) {
	x.xxx_hidden_UserId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *ListRemindersReq) SetPeriodStart(v *timestamppb.Timestamp) {
	x.xxx_hidden_PeriodStart = v
}

func (x *ListRemindersReq) SetPeriodEnd(v *timestamppb.Timestamp) {
	x.xxx_hidden_PeriodEnd = v
}

func (x *ListRemindersReq) SetStatus(v ReminderStatus) {
	x.xxx_hidden_Status = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 7)
}

func (x *ListRemindersReq) HasLimit() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ListRemindersReq) HasOffset() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ListRemindersReq) HasMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ListRemindersReq) HasUserId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ListRemindersReq) HasPeriodStart() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_PeriodStart != nil
}

func (x *ListRemindersReq) HasPeriodEnd() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_PeriodEnd != nil
}

func (x *ListRemindersReq) HasStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *ListRemindersReq) ClearLimit() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Limit = 0
}

func (x *ListRemindersReq) ClearOffset() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Offset = 0
}

func (x *ListRemindersReq) ClearMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Message = nil
}

func (x *ListRemindersReq) ClearUserId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_UserId = 0
}

func (x *ListRemindersReq) ClearPeriodStart() {
	x.xxx_hidden_PeriodStart = nil
}

func (x *ListRemindersReq) ClearPeriodEnd() {
	x.xxx_hidden_PeriodEnd = nil
}

func (x *ListRemindersReq) ClearStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Status = ReminderStatus_REMINDER_STATUS_UNSPECIFIED
}

type ListRemindersReq_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Limit the number of reminders returned
	Limit *int64
	// Offset the reminders returned
	Offset *int64
	// Search field for reminders
	Message *string
	// User ID of the creator
	UserId *int64
	// Search for reminders starting from this date
	PeriodStart *timestamppb.Timestamp
	// Search for reminders ending at this date
	PeriodEnd *timestamppb.Timestamp
	// Search for reminders with this status
	Status *ReminderStatus
}

func (b0 ListRemindersReq_builder) Build() *ListRemindersReq {
	m0 := &ListRemindersReq{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Limit != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_Limit = *b.Limit
	}
	if b.Offset != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_Offset = *b.Offset
	}
	if b.Message != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_Message = b.Message
	}
	if b.UserId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_UserId = *b.UserId
	}
	x.xxx_hidden_PeriodStart = b.PeriodStart
	x.xxx_hidden_PeriodEnd = b.PeriodEnd
	if b.Status != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 7)
		x.xxx_hidden_Status = *b.Status
	}
	return m0
}

type ListRemindersResp struct {
	state                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Reminders *[]*Reminder           `protobuf:"bytes,1,rep,name=reminders" json:"reminders,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ListRemindersResp) Reset() {
	*x = ListRemindersResp{}
	mi := &file_ginbot_proto_reminder_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRemindersResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRemindersResp) ProtoMessage() {}

func (x *ListRemindersResp) ProtoReflect() protoreflect.Message {
	mi := &file_ginbot_proto_reminder_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListRemindersResp) GetReminders() []*Reminder {
	if x != nil {
		if x.xxx_hidden_Reminders != nil {
			return *x.xxx_hidden_Reminders
		}
	}
	return nil
}

func (x *ListRemindersResp) SetReminders(v []*Reminder) {
	x.xxx_hidden_Reminders = &v
}

type ListRemindersResp_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Reminders []*Reminder
}

func (b0 ListRemindersResp_builder) Build() *ListRemindersResp {
	m0 := &ListRemindersResp{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Reminders = &b.Reminders
	return m0
}

type CreateReminderReq struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Datetime    *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=datetime" json:"datetime,omitempty"`
	xxx_hidden_Timezone    *string                `protobuf:"bytes,2,opt,name=timezone" json:"timezone,omitempty"`
	xxx_hidden_Message     *string                `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	xxx_hidden_Destination *ReminderDestination   `protobuf:"bytes,4,opt,name=destination" json:"destination,omitempty"`
	xxx_hidden_RepeatCron  *string                `protobuf:"bytes,5,opt,name=repeat_cron,json=repeatCron" json:"repeat_cron,omitempty"`
	xxx_hidden_ParentId    int64                  `protobuf:"varint,6,opt,name=parent_id,json=parentId" json:"parent_id,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CreateReminderReq) Reset() {
	*x = CreateReminderReq{}
	mi := &file_ginbot_proto_reminder_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateReminderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReminderReq) ProtoMessage() {}

func (x *CreateReminderReq) ProtoReflect() protoreflect.Message {
	mi := &file_ginbot_proto_reminder_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateReminderReq) GetDatetime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_Datetime
	}
	return nil
}

func (x *CreateReminderReq) GetTimezone() string {
	if x != nil {
		if x.xxx_hidden_Timezone != nil {
			return *x.xxx_hidden_Timezone
		}
		return ""
	}
	return ""
}

func (x *CreateReminderReq) GetMessage() string {
	if x != nil {
		if x.xxx_hidden_Message != nil {
			return *x.xxx_hidden_Message
		}
		return ""
	}
	return ""
}

func (x *CreateReminderReq) GetDestination() *ReminderDestination {
	if x != nil {
		return x.xxx_hidden_Destination
	}
	return nil
}

func (x *CreateReminderReq) GetRepeatCron() string {
	if x != nil {
		if x.xxx_hidden_RepeatCron != nil {
			return *x.xxx_hidden_RepeatCron
		}
		return ""
	}
	return ""
}

func (x *CreateReminderReq) GetParentId() int64 {
	if x != nil {
		return x.xxx_hidden_ParentId
	}
	return 0
}

func (x *CreateReminderReq) SetDatetime(v *timestamppb.Timestamp) {
	x.xxx_hidden_Datetime = v
}

func (x *CreateReminderReq) SetTimezone(v string) {
	x.xxx_hidden_Timezone = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *CreateReminderReq) SetMessage(v string) {
	x.xxx_hidden_Message = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *CreateReminderReq) SetDestination(v *ReminderDestination) {
	x.xxx_hidden_Destination = v
}

func (x *CreateReminderReq) SetRepeatCron(v string) {
	x.xxx_hidden_RepeatCron = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *CreateReminderReq) SetParentId(v int64) {
	x.xxx_hidden_ParentId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *CreateReminderReq) HasDatetime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Datetime != nil
}

func (x *CreateReminderReq) HasTimezone() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CreateReminderReq) HasMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CreateReminderReq) HasDestination() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Destination != nil
}

func (x *CreateReminderReq) HasRepeatCron() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *CreateReminderReq) HasParentId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *CreateReminderReq) ClearDatetime() {
	x.xxx_hidden_Datetime = nil
}

func (x *CreateReminderReq) ClearTimezone() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Timezone = nil
}

func (x *CreateReminderReq) ClearMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Message = nil
}

func (x *CreateReminderReq) ClearDestination() {
	x.xxx_hidden_Destination = nil
}

func (x *CreateReminderReq) ClearRepeatCron() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_RepeatCron = nil
}

func (x *CreateReminderReq) ClearParentId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_ParentId = 0
}

type CreateReminderReq_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Date and time of the Reminder (UTC+0)
	Datetime *timestamppb.Timestamp
	// Timezone of the Reminder
	Timezone *string
	// Reminder message
	Message *string
	// Destinations to send the reminder to
	Destination *ReminderDestination
	// Repeat in cron format
	RepeatCron *string
	// Parent reminder ID
	ParentId *int64
}

func (b0 CreateReminderReq_builder) Build() *CreateReminderReq {
	m0 := &CreateReminderReq{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Datetime = b.Datetime
	if b.Timezone != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_Timezone = b.Timezone
	}
	if b.Message != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_Message = b.Message
	}
	x.xxx_hidden_Destination = b.Destination
	if b.RepeatCron != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_RepeatCron = b.RepeatCron
	}
	if b.ParentId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_ParentId = *b.ParentId
	}
	return m0
}

type CreateReminderResp struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CreateReminderResp) Reset() {
	*x = CreateReminderResp{}
	mi := &file_ginbot_proto_reminder_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateReminderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReminderResp) ProtoMessage() {}

func (x *CreateReminderResp) ProtoReflect() protoreflect.Message {
	mi := &file_ginbot_proto_reminder_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateReminderResp) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *CreateReminderResp) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *CreateReminderResp) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CreateReminderResp) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

type CreateReminderResp_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Reminder UUIDv7
	Id *string
}

func (b0 CreateReminderResp_builder) Build() *CreateReminderResp {
	m0 := &CreateReminderResp{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Id = b.Id
	}
	return m0
}

type UpdateReminderReq struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	xxx_hidden_Datetime    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=datetime" json:"datetime,omitempty"`
	xxx_hidden_Timezone    *string                `protobuf:"bytes,3,opt,name=timezone" json:"timezone,omitempty"`
	xxx_hidden_Message     *string                `protobuf:"bytes,4,opt,name=message" json:"message,omitempty"`
	xxx_hidden_Destination *ReminderDestination   `protobuf:"bytes,5,opt,name=destination" json:"destination,omitempty"`
	xxx_hidden_RepeatCron  *string                `protobuf:"bytes,6,opt,name=repeat_cron,json=repeatCron" json:"repeat_cron,omitempty"`
	xxx_hidden_ParentId    int64                  `protobuf:"varint,7,opt,name=parent_id,json=parentId" json:"parent_id,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UpdateReminderReq) Reset() {
	*x = UpdateReminderReq{}
	mi := &file_ginbot_proto_reminder_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateReminderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReminderReq) ProtoMessage() {}

func (x *UpdateReminderReq) ProtoReflect() protoreflect.Message {
	mi := &file_ginbot_proto_reminder_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateReminderReq) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *UpdateReminderReq) GetDatetime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_Datetime
	}
	return nil
}

func (x *UpdateReminderReq) GetTimezone() string {
	if x != nil {
		if x.xxx_hidden_Timezone != nil {
			return *x.xxx_hidden_Timezone
		}
		return ""
	}
	return ""
}

func (x *UpdateReminderReq) GetMessage() string {
	if x != nil {
		if x.xxx_hidden_Message != nil {
			return *x.xxx_hidden_Message
		}
		return ""
	}
	return ""
}

func (x *UpdateReminderReq) GetDestination() *ReminderDestination {
	if x != nil {
		return x.xxx_hidden_Destination
	}
	return nil
}

func (x *UpdateReminderReq) GetRepeatCron() string {
	if x != nil {
		if x.xxx_hidden_RepeatCron != nil {
			return *x.xxx_hidden_RepeatCron
		}
		return ""
	}
	return ""
}

func (x *UpdateReminderReq) GetParentId() int64 {
	if x != nil {
		return x.xxx_hidden_ParentId
	}
	return 0
}

func (x *UpdateReminderReq) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *UpdateReminderReq) SetDatetime(v *timestamppb.Timestamp) {
	x.xxx_hidden_Datetime = v
}

func (x *UpdateReminderReq) SetTimezone(v string) {
	x.xxx_hidden_Timezone = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *UpdateReminderReq) SetMessage(v string) {
	x.xxx_hidden_Message = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *UpdateReminderReq) SetDestination(v *ReminderDestination) {
	x.xxx_hidden_Destination = v
}

func (x *UpdateReminderReq) SetRepeatCron(v string) {
	x.xxx_hidden_RepeatCron = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
}

func (x *UpdateReminderReq) SetParentId(v int64) {
	x.xxx_hidden_ParentId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 7)
}

func (x *UpdateReminderReq) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdateReminderReq) HasDatetime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Datetime != nil
}

func (x *UpdateReminderReq) HasTimezone() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *UpdateReminderReq) HasMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *UpdateReminderReq) HasDestination() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Destination != nil
}

func (x *UpdateReminderReq) HasRepeatCron() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *UpdateReminderReq) HasParentId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *UpdateReminderReq) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *UpdateReminderReq) ClearDatetime() {
	x.xxx_hidden_Datetime = nil
}

func (x *UpdateReminderReq) ClearTimezone() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Timezone = nil
}

func (x *UpdateReminderReq) ClearMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Message = nil
}

func (x *UpdateReminderReq) ClearDestination() {
	x.xxx_hidden_Destination = nil
}

func (x *UpdateReminderReq) ClearRepeatCron() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_RepeatCron = nil
}

func (x *UpdateReminderReq) ClearParentId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_ParentId = 0
}

type UpdateReminderReq_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Reminder UUIDv7
	Id *string
	// Date and time of the Reminder (UTC+0)
	Datetime *timestamppb.Timestamp
	// Timezone of the Reminder
	Timezone *string
	// Reminder message
	Message *string
	// Destinations to send the reminder to
	Destination *ReminderDestination
	// Repeat in cron format
	RepeatCron *string
	// Parent reminder ID
	ParentId *int64
}

func (b0 UpdateReminderReq_builder) Build() *UpdateReminderReq {
	m0 := &UpdateReminderReq{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_Id = b.Id
	}
	x.xxx_hidden_Datetime = b.Datetime
	if b.Timezone != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_Timezone = b.Timezone
	}
	if b.Message != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_Message = b.Message
	}
	x.xxx_hidden_Destination = b.Destination
	if b.RepeatCron != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_RepeatCron = b.RepeatCron
	}
	if b.ParentId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 7)
		x.xxx_hidden_ParentId = *b.ParentId
	}
	return m0
}

type DeleteReminderReq struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DeleteReminderReq) Reset() {
	*x = DeleteReminderReq{}
	mi := &file_ginbot_proto_reminder_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteReminderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReminderReq) ProtoMessage() {}

func (x *DeleteReminderReq) ProtoReflect() protoreflect.Message {
	mi := &file_ginbot_proto_reminder_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteReminderReq) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *DeleteReminderReq) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *DeleteReminderReq) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeleteReminderReq) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

type DeleteReminderReq_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id *string
}

func (b0 DeleteReminderReq_builder) Build() *DeleteReminderReq {
	m0 := &DeleteReminderReq{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Id = b.Id
	}
	return m0
}

type GetExpiredRemindersResp struct {
	state                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Reminders *[]*Reminder           `protobuf:"bytes,1,rep,name=reminders" json:"reminders,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GetExpiredRemindersResp) Reset() {
	*x = GetExpiredRemindersResp{}
	mi := &file_ginbot_proto_reminder_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExpiredRemindersResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExpiredRemindersResp) ProtoMessage() {}

func (x *GetExpiredRemindersResp) ProtoReflect() protoreflect.Message {
	mi := &file_ginbot_proto_reminder_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetExpiredRemindersResp) GetReminders() []*Reminder {
	if x != nil {
		if x.xxx_hidden_Reminders != nil {
			return *x.xxx_hidden_Reminders
		}
	}
	return nil
}

func (x *GetExpiredRemindersResp) SetReminders(v []*Reminder) {
	x.xxx_hidden_Reminders = &v
}

type GetExpiredRemindersResp_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Reminders []*Reminder
}

func (b0 GetExpiredRemindersResp_builder) Build() *GetExpiredRemindersResp {
	m0 := &GetExpiredRemindersResp{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Reminders = &b.Reminders
	return m0
}

var File_ginbot_proto_reminder_proto protoreflect.FileDescriptor

var file_ginbot_proto_reminder_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x67, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72,
	0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x67,
	0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x69, 0x6e,
	0x62, 0x6f, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x21, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x67, 0x6f, 0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd0, 0x03, 0x0a, 0x08, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x36, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d,
	0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d,
	0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x5f,
	0x63, 0x72, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x65,
	0x61, 0x74, 0x43, 0x72, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x69,
	0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x6d, 0x69, 0x6e,
	0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x67, 0x69,
	0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x6d, 0x69, 0x6e,
	0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xec, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x6d, 0x69,
	0x6e, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x43, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x65, 0x6e, 0x75, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x67, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x06,
	0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x45, 0x6e, 0x75, 0x6d, 0x12, 0x44, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x0c, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x4a, 0x0a, 0x10, 0x64, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x42, 0x06, 0xba,
	0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x0f, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6d,
	0x69, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x45, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x08, 0x72,
	0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x67, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x6d,
	0x69, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x08, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x22,
	0xa3, 0x02, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x0c, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x65,
	0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x45, 0x6e, 0x64, 0x12,
	0x34, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1c, 0x2e, 0x67, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x49, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6d,
	0x69, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x09, 0x72, 0x65,
	0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x67, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x6d,
	0x69, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x09, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x73,
	0x22, 0xb3, 0x03, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6d, 0x69, 0x6e,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x43, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x42, 0x0b, 0xba, 0x48, 0x08, 0xc8, 0x01, 0x01, 0xb2, 0x01, 0x02, 0x40,
	0x01, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x43, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x44, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xb7, 0x01, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x65, 0x61,
	0x74, 0x5f, 0x63, 0x72, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x95, 0x01, 0xba,
	0x48, 0x91, 0x01, 0x72, 0x8e, 0x01, 0x32, 0x8b, 0x01, 0x2f, 0x28, 0x40, 0x28, 0x61, 0x6e, 0x6e,
	0x75, 0x61, 0x6c, 0x6c, 0x79, 0x7c, 0x79, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x7c, 0x6d, 0x6f, 0x6e,
	0x74, 0x68, 0x6c, 0x79, 0x7c, 0x77, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x7c, 0x64, 0x61, 0x69, 0x6c,
	0x79, 0x7c, 0x68, 0x6f, 0x75, 0x72, 0x6c, 0x79, 0x7c, 0x72, 0x65, 0x62, 0x6f, 0x6f, 0x74, 0x29,
	0x29, 0x7c, 0x28, 0x40, 0x65, 0x76, 0x65, 0x72, 0x79, 0x20, 0x28, 0x5c, 0x64, 0x2b, 0x28, 0x6e,
	0x73, 0x7c, 0x75, 0x73, 0x7c, 0xc2, 0xb5, 0x73, 0x7c, 0x6d, 0x73, 0x7c, 0x73, 0x7c, 0x6d, 0x7c,
	0x68, 0x29, 0x29, 0x2b, 0x29, 0x7c, 0x28, 0x28, 0x28, 0x28, 0x5c, 0x64, 0x2b, 0x2c, 0x29, 0x2b,
	0x5c, 0x64, 0x2b, 0x7c, 0x28, 0x5c, 0x64, 0x2b, 0x28, 0x5c, 0x2f, 0x7c, 0x2d, 0x29, 0x5c, 0x64,
	0x2b, 0x29, 0x7c, 0x5c, 0x64, 0x2b, 0x7c, 0x5c, 0x2a, 0x29, 0x20, 0x3f, 0x29, 0x7b, 0x35, 0x2c,
	0x37, 0x7d, 0x29, 0x2f, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x43, 0x72, 0x6f, 0x6e,
	0x12, 0x24, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x07, 0xba, 0x48, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x08, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x24, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xd0, 0x03, 0x0a,
	0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x12, 0x1b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b,
	0xba, 0x48, 0x08, 0xc8, 0x01, 0x01, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x43, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0b, 0xba,
	0x48, 0x08, 0xc8, 0x01, 0x01, 0xb2, 0x01, 0x02, 0x40, 0x01, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x43, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x67, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0xb7, 0x01, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x5f, 0x63, 0x72, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x95, 0x01, 0xba, 0x48, 0x91, 0x01, 0x72, 0x8e, 0x01, 0x32,
	0x8b, 0x01, 0x2f, 0x28, 0x40, 0x28, 0x61, 0x6e, 0x6e, 0x75, 0x61, 0x6c, 0x6c, 0x79, 0x7c, 0x79,
	0x65, 0x61, 0x72, 0x6c, 0x79, 0x7c, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x7c, 0x77, 0x65,
	0x65, 0x6b, 0x6c, 0x79, 0x7c, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x7c, 0x68, 0x6f, 0x75, 0x72, 0x6c,
	0x79, 0x7c, 0x72, 0x65, 0x62, 0x6f, 0x6f, 0x74, 0x29, 0x29, 0x7c, 0x28, 0x40, 0x65, 0x76, 0x65,
	0x72, 0x79, 0x20, 0x28, 0x5c, 0x64, 0x2b, 0x28, 0x6e, 0x73, 0x7c, 0x75, 0x73, 0x7c, 0xc2, 0xb5,
	0x73, 0x7c, 0x6d, 0x73, 0x7c, 0x73, 0x7c, 0x6d, 0x7c, 0x68, 0x29, 0x29, 0x2b, 0x29, 0x7c, 0x28,
	0x28, 0x28, 0x28, 0x5c, 0x64, 0x2b, 0x2c, 0x29, 0x2b, 0x5c, 0x64, 0x2b, 0x7c, 0x28, 0x5c, 0x64,
	0x2b, 0x28, 0x5c, 0x2f, 0x7c, 0x2d, 0x29, 0x5c, 0x64, 0x2b, 0x29, 0x7c, 0x5c, 0x64, 0x2b, 0x7c,
	0x5c, 0x2a, 0x29, 0x20, 0x3f, 0x29, 0x7b, 0x35, 0x2c, 0x37, 0x7d, 0x29, 0x2f, 0x52, 0x0a, 0x72,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x43, 0x72, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x09, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xba, 0x48,
	0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0x30, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0b, 0xba, 0x48, 0x08, 0xc8, 0x01, 0x01, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x4f, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x52,
	0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x09,
	0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x67, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x09, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65,
	0x72, 0x73, 0x2a, 0xa3, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x1b, 0x52, 0x45, 0x4d, 0x49, 0x4e, 0x44, 0x45,
	0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x45, 0x4d, 0x49, 0x4e, 0x44,
	0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e,
	0x47, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x45, 0x4d, 0x49, 0x4e, 0x44, 0x45, 0x52, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x1d, 0x0a,
	0x19, 0x52, 0x45, 0x4d, 0x49, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x45, 0x44, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16,
	0x52, 0x45, 0x4d, 0x49, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x32, 0xf0, 0x03, 0x0a, 0x0f, 0x52, 0x65, 0x6d,
	0x69, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4a, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x67, 0x69,
	0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x67, 0x69, 0x6e, 0x62,
	0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x69,
	0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x2e, 0x67, 0x69, 0x6e, 0x62,
	0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6d,
	0x69, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x67, 0x69, 0x6e, 0x62,
	0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6d,
	0x69, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x0e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x67,
	0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e,
	0x67, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x49, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65,
	0x72, 0x12, 0x1f, 0x2e, 0x67, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x49, 0x0a, 0x0e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x67,
	0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x45, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x64, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x25, 0x2e, 0x67, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x52, 0x65,
	0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x42, 0x38, 0x5a, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x61, 0x73, 0x69, 0x6b, 0x75,
	0x75, 0x2f, 0x47, 0x69, 0x6e, 0x42, 0x6f, 0x74, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x65, 0x6e,
	0x2f, 0x67, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x92, 0x03, 0x05,
	0xd2, 0x3e, 0x02, 0x10, 0x03, 0x62, 0x08, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x70,
	0xe8, 0x07,
}

var file_ginbot_proto_reminder_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ginbot_proto_reminder_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_ginbot_proto_reminder_proto_goTypes = []any{
	(ReminderStatus)(0),             // 0: ginbot.proto.ReminderStatus
	(*Reminder)(nil),                // 1: ginbot.proto.Reminder
	(*ReminderDestination)(nil),     // 2: ginbot.proto.ReminderDestination
	(*GetReminderReq)(nil),          // 3: ginbot.proto.GetReminderReq
	(*GetReminderResp)(nil),         // 4: ginbot.proto.GetReminderResp
	(*ListRemindersReq)(nil),        // 5: ginbot.proto.ListRemindersReq
	(*ListRemindersResp)(nil),       // 6: ginbot.proto.ListRemindersResp
	(*CreateReminderReq)(nil),       // 7: ginbot.proto.CreateReminderReq
	(*CreateReminderResp)(nil),      // 8: ginbot.proto.CreateReminderResp
	(*UpdateReminderReq)(nil),       // 9: ginbot.proto.UpdateReminderReq
	(*DeleteReminderReq)(nil),       // 10: ginbot.proto.DeleteReminderReq
	(*GetExpiredRemindersResp)(nil), // 11: ginbot.proto.GetExpiredRemindersResp
	(*timestamppb.Timestamp)(nil),   // 12: google.protobuf.Timestamp
	(Platform)(0),                   // 13: ginbot.proto.Platform
	(*structpb.Struct)(nil),         // 14: google.protobuf.Struct
	(*emptypb.Empty)(nil),           // 15: google.protobuf.Empty
}
var file_ginbot_proto_reminder_proto_depIdxs = []int32{
	12, // 0: ginbot.proto.Reminder.datetime:type_name -> google.protobuf.Timestamp
	2,  // 1: ginbot.proto.Reminder.destination:type_name -> ginbot.proto.ReminderDestination
	0,  // 2: ginbot.proto.Reminder.status:type_name -> ginbot.proto.ReminderStatus
	12, // 3: ginbot.proto.Reminder.created_at:type_name -> google.protobuf.Timestamp
	12, // 4: ginbot.proto.Reminder.updated_at:type_name -> google.protobuf.Timestamp
	13, // 5: ginbot.proto.ReminderDestination.platform_enum:type_name -> ginbot.proto.Platform
	14, // 6: ginbot.proto.ReminderDestination.instance_meta:type_name -> google.protobuf.Struct
	14, // 7: ginbot.proto.ReminderDestination.destination_meta:type_name -> google.protobuf.Struct
	1,  // 8: ginbot.proto.GetReminderResp.reminder:type_name -> ginbot.proto.Reminder
	12, // 9: ginbot.proto.ListRemindersReq.period_start:type_name -> google.protobuf.Timestamp
	12, // 10: ginbot.proto.ListRemindersReq.period_end:type_name -> google.protobuf.Timestamp
	0,  // 11: ginbot.proto.ListRemindersReq.status:type_name -> ginbot.proto.ReminderStatus
	1,  // 12: ginbot.proto.ListRemindersResp.reminders:type_name -> ginbot.proto.Reminder
	12, // 13: ginbot.proto.CreateReminderReq.datetime:type_name -> google.protobuf.Timestamp
	2,  // 14: ginbot.proto.CreateReminderReq.destination:type_name -> ginbot.proto.ReminderDestination
	12, // 15: ginbot.proto.UpdateReminderReq.datetime:type_name -> google.protobuf.Timestamp
	2,  // 16: ginbot.proto.UpdateReminderReq.destination:type_name -> ginbot.proto.ReminderDestination
	1,  // 17: ginbot.proto.GetExpiredRemindersResp.reminders:type_name -> ginbot.proto.Reminder
	3,  // 18: ginbot.proto.ReminderService.GetReminder:input_type -> ginbot.proto.GetReminderReq
	5,  // 19: ginbot.proto.ReminderService.ListReminders:input_type -> ginbot.proto.ListRemindersReq
	7,  // 20: ginbot.proto.ReminderService.CreateReminder:input_type -> ginbot.proto.CreateReminderReq
	9,  // 21: ginbot.proto.ReminderService.UpdateReminder:input_type -> ginbot.proto.UpdateReminderReq
	10, // 22: ginbot.proto.ReminderService.DeleteReminder:input_type -> ginbot.proto.DeleteReminderReq
	15, // 23: ginbot.proto.ReminderService.GetExpiredReminders:input_type -> google.protobuf.Empty
	4,  // 24: ginbot.proto.ReminderService.GetReminder:output_type -> ginbot.proto.GetReminderResp
	6,  // 25: ginbot.proto.ReminderService.ListReminders:output_type -> ginbot.proto.ListRemindersResp
	8,  // 26: ginbot.proto.ReminderService.CreateReminder:output_type -> ginbot.proto.CreateReminderResp
	15, // 27: ginbot.proto.ReminderService.UpdateReminder:output_type -> google.protobuf.Empty
	15, // 28: ginbot.proto.ReminderService.DeleteReminder:output_type -> google.protobuf.Empty
	11, // 29: ginbot.proto.ReminderService.GetExpiredReminders:output_type -> ginbot.proto.GetExpiredRemindersResp
	24, // [24:30] is the sub-list for method output_type
	18, // [18:24] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_ginbot_proto_reminder_proto_init() }
func file_ginbot_proto_reminder_proto_init() {
	if File_ginbot_proto_reminder_proto != nil {
		return
	}
	file_ginbot_proto_platform_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ginbot_proto_reminder_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ginbot_proto_reminder_proto_goTypes,
		DependencyIndexes: file_ginbot_proto_reminder_proto_depIdxs,
		EnumInfos:         file_ginbot_proto_reminder_proto_enumTypes,
		MessageInfos:      file_ginbot_proto_reminder_proto_msgTypes,
	}.Build()
	File_ginbot_proto_reminder_proto = out.File
	file_ginbot_proto_reminder_proto_rawDesc = nil
	file_ginbot_proto_reminder_proto_goTypes = nil
	file_ginbot_proto_reminder_proto_depIdxs = nil
}

edition = "2023";

package ginbot.proto;

option go_package = "github.com/lasikuu/GinBot/pkg/gen/ginbot/proto";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "buf/validate/validate.proto";

import "ginbot/proto/platform.proto";

enum ReminderStatus {
  REMINDER_STATUS_UNSPECIFIED = 0;
  REMINDER_STATUS_PENDING = 1;
  REMINDER_STATUS_SENT = 2;
  REMINDER_STATUS_DELIVERED = 3;
  REMINDER_STATUS_FAILED = 4;
}

service ReminderService {
  rpc GetReminder(GetReminderReq) returns (GetReminderResp);
  rpc ListReminders(ListRemindersReq) returns (ListRemindersResp);
  rpc CreateReminder(CreateReminderReq) returns (CreateReminderResp);
  rpc UpdateReminder(UpdateReminderReq) returns (google.protobuf.Empty);
  rpc DeleteReminder(DeleteReminderReq) returns (google.protobuf.Empty);
  rpc GetExpiredReminders(google.protobuf.Empty) returns (GetExpiredRemindersResp);
}

// Message representing a Reminder
message Reminder {
  // Reminder UUIDv7
  string id = 1;
  // Date and time of the Reminder (UTC+0)
  google.protobuf.Timestamp datetime = 2;
  // Timezone of the Reminder
  string timezone = 3;
  // Repeat in cron format
  string repeat_cron = 4;
  // Destinations to send the reminder to
  ReminderDestination destination = 5;
  // Status of the Reminder
  ReminderStatus status = 6;
  // User ID of the creator
  int64 user_id = 7;
  // Reminder message
  string message = 8;
  // Parent reminder ID
  int64 parent_id = 9;
  // Created at
  google.protobuf.Timestamp created_at = 10;
  // Updated at
  google.protobuf.Timestamp updated_at = 11;
}

// Destination to send the reminder to
message ReminderDestination {
  // Platform to send the reminder to
  Platform platform_enum = 1 [
    (buf.validate.field).required = true
  ];
  // Platform meta information such as Server ID etc.
  google.protobuf.Struct instance_meta = 2 [
    (buf.validate.field).required = true
  ];
  // Meta information such as Channel ID etc.
  google.protobuf.Struct destination_meta = 3 [
    (buf.validate.field).required = true
  ];
}

message GetReminderReq {
  // Reminder UUIDv7
  string id = 1;
}

message GetReminderResp {
  Reminder reminder = 1;
}

message ListRemindersReq {
  // Limit the number of reminders returned
  int64 limit = 1;
  // Offset the reminders returned
  int64 offset = 2;
  // Search field for reminders
  string message = 3;
  // User ID of the creator
  int64 user_id = 4;
  // Search for reminders starting from this date
  google.protobuf.Timestamp period_start = 5;
  // Search for reminders ending at this date
  google.protobuf.Timestamp period_end = 6;
  // Search for reminders with this status
  ReminderStatus status = 7;
}

message ListRemindersResp {
  repeated Reminder reminders = 1;
}

message CreateReminderReq {
  // Date and time of the Reminder (UTC+0)
  google.protobuf.Timestamp datetime = 1 [
    (buf.validate.field).required = true,
    (buf.validate.field).timestamp.gt_now = true
  ];
  // Timezone of the Reminder
  string timezone = 2;
  // Reminder message
  string message = 3;
  // Destinations to send the reminder to
  ReminderDestination destination = 4;
  // Repeat in cron format
  string repeat_cron = 5 [
    (buf.validate.field).string.pattern = "/(@(annually|yearly|monthly|weekly|daily|hourly|reboot))|(@every (\\d+(ns|us|µs|ms|s|m|h))+)|((((\\d+,)+\\d+|(\\d+(\\/|-)\\d+)|\\d+|\\*) ?){5,7})/"
  ];
  // Parent reminder ID
  int64 parent_id = 6 [
    (buf.validate.field).uint64.gt = 0
  ];
}

message CreateReminderResp {
  // Reminder UUIDv7
  string id = 1;
}

message UpdateReminderReq {
  // Reminder UUIDv7
  string id = 1 [
    (buf.validate.field).required = true,
    (buf.validate.field).string.uuid = true
  ];
  // Date and time of the Reminder (UTC+0)
  google.protobuf.Timestamp datetime = 2 [
    (buf.validate.field).required = true,
    (buf.validate.field).timestamp.gt_now = true
  ];
  // Timezone of the Reminder
  string timezone = 3;
  // Reminder message
  string message = 4;
  // Destinations to send the reminder to
  ReminderDestination destination = 5;
  // Repeat in cron format
  string repeat_cron = 6 [
    (buf.validate.field).string.pattern = "/(@(annually|yearly|monthly|weekly|daily|hourly|reboot))|(@every (\\d+(ns|us|µs|ms|s|m|h))+)|((((\\d+,)+\\d+|(\\d+(\\/|-)\\d+)|\\d+|\\*) ?){5,7})/"
  ];
  // Parent reminder ID
  int64 parent_id = 7 [
    (buf.validate.field).uint64.gt = 0
  ];
}

message DeleteReminderReq {
  string id = 1 [
    (buf.validate.field).required = true,
    (buf.validate.field).string.uuid = true
  ];
}

message GetExpiredRemindersResp {
  repeated Reminder reminders = 1;
}
edition = "2023";

package ginbot.platform;

option go_package = "github.com/CrescentKohana/GinBot/pkg/gen/proto";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";

import "proto/common.proto";

service PlatformService {
  rpc GetPlatform(GetPlatformReq) returns (GetPlatformResp);
  rpc ListPlatforms(ListPlatformsReq) returns (ListPlatformsResp);
  rpc CreatePlatform(CreatePlatformReq) returns (CreatePlatformResp);
  rpc UpdatePlatform(UpdatePlatformReq) returns (google.protobuf.Empty);
  rpc DeletePlatform(DeletePlatformReq) returns (google.protobuf.Empty);
}

message Platform {
  // Internal Platform ID
  int64 id = 1;
  // Platform enum
  common.PlatformEnum platform_enum = 2;
  // Platform meta information such as Server ID etc.
  google.protobuf.Struct platform_meta = 3;
  // Default channel for the platform (if applicable) for announcements etc.
  string default_channel = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
}

message GetPlatformReq {
  // Internal Platform ID
  int64 id = 1;
}

message GetPlatformResp {
  Platform platform = 1;
}

message ListPlatformsReq {
  int64 offset = 1;
  int64 limit = 2;
}

message ListPlatformsResp {
  repeated Platform platforms = 1;
}

message CreatePlatformReq {
  // Platform enum
  common.PlatformEnum platform_enum = 1;
  // Platform meta information such as Server ID etc.
  google.protobuf.Struct platform_meta = 2;
  // Default channel for the platform (if applicable) for announcements etc.
  string default_channel = 3;
}

message CreatePlatformResp {
  // Internal Platform ID
  int64 id = 1;
}

message UpdatePlatformReq {
  // Internal Platform ID
  int64 id = 1;
  // Platform enum
  common.PlatformEnum platform_enum = 2;
  // Platform meta information such as Server ID etc.
  google.protobuf.Struct platform_meta = 3;
  // Default channel for the platform (if applicable) for announcements etc.
  string default_channel = 4;
}

message DeletePlatformReq {
  // Internal Platform ID
  int64 id = 1;
}
